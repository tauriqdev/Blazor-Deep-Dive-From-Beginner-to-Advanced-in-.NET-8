@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>Edit Server</h3>

<br />
<br />

@if (server != null)
{
    <EditForm Model="server"
              FormName="formServer"
              OnValidSubmit="OnSubmit">
        @* tells the form to use the data annotations on the model for validation*@
        <DataAnnotationsValidator></DataAnnotationsValidator>
        @* display the validation message *@
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">
                    Name
                </label>
            </div>
            <div class="col-6">
                <InputText class="form-control" @bind-Value="server.Name"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.Name"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">
                    City
                </label>
            </div>
            <div class="col-6">
                <InputText class="form-control" @bind-Value="server.City"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.City"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">
                    Online
                </label>
            </div>
            <div class="col-6">
                <InputCheckbox class="form-check-input" @bind-Value="server.IsOnline"></InputCheckbox>
            </div>
        </div>

        <br />

        <button class="btn btn-primary me-1" type="submit">
            Update
        </button>
        <a href="/servers" class="btn btn-primary">
            Close
        </a>
    </EditForm>
}

<br />

@code {
    [Parameter]
    public int id { get; set; }

    // two way model binding
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        // fetch only if server is null
        server ??= ServersRepository.GetServerById(id);
    }

    private void OnSubmit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
            NavigationManager.NavigateTo("/servers");
        }
    }
}
