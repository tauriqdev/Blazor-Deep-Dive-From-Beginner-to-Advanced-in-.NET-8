@page "/servers"
@page "/servers/back_from/{cityName}"

@inject NavigationManager NavigationManager
@rendermode InteractiveServer // set rendermode here to set this component and all child components *@

<div class="d-flex justify-content-between">
    <h3>Servers</h3>

    <a href="/server" class="btn btn-link">
        Add
    </a>

    <a href="/servername" class="btn btn-primary">
        Add Server
    </a>
</div>
<br />
<br />

<CityListComponent @ref="cityListComponent"
                   SelectedCityCallback="HandleCitySelection"
                   selectedCity="@selectedCity">
</CityListComponent>

<br />

<ServerSearchComponent @ref="serverSearchComponent"
                       SearchServerCallback="HandleSearchServer">
</ServerSearchComponent>

<br />

@* to send a value down to multiple children instead *@
@* of using multiple child parameters *@
<CascadingValue Name="SelectedCity" Value="@selectedCity">
    @* to set rendermode per component *@
    @* this method is recommended *@
    <ServerListComponent @rendermode="InteractiveServer"
                         CityName="@selectedCity"
                         SearchFilter="@serverFilter">
    </ServerListComponent>
</CascadingValue>

@code {
    [Parameter]
    public string? CityName { get; set; }

    private string selectedCity = "Toronto";
    private string serverFilter = "";

    private CityListComponent? cityListComponent;
    private ServerSearchComponent? serverSearchComponent;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;

                // rerender to reflect the changes
                StateHasChanged();
            }
        }
    }

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        serverFilter = string.Empty;
        serverSearchComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        serverFilter = searchFilter;
        cityListComponent?.ClearSelection();
    }
}
